# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
type Blog @model @aws_api_key {
  id: ID!
  name: String!
  posts: [Post] @hasMany
}

type Post @model @aws_api_key {
  id: ID!
  title: String!
  blog: Blog @belongsTo
  comments: [Comment] @hasMany
}

type Comment @model @aws_api_key {
  id: ID!
  post: Post @belongsTo
  content: String!
}

type Organization @model @aws_api_key {
  id: ID!
  name: String
}

# type Organization2 @aws_api_key {
#   id: ID!
#   name: String
#   owners(num: int, after: string): OwnerConnection
# }

# type OwnerConnection @aws_api_key {
#   cursor: string
#   owners: [User]
# }

type User @model @aws_api_key {
  id: ID!
  title: String
  type: String
  firstName: String
  middleName: String
  lastName: String
  salary: String
  organizationID: String
}

type Favorite @model @aws_api_key {
  id: ID!
  userID: String
  favType: String
  favID: String
  image: String
  name: String
}

type Tenant @model @aws_api_key {
  id: ID!
  firstName: String
  middleName: String
  lastName: String
  unitID: String
}

type Property @model @aws_api_key {
  id: ID!
  name: String
  city: String
  state: String
  country: String
  zipCode: String
  poBox: String
  userID: String
  organizationID: String
}

type Building @model @aws_api_key {
  id: ID!
  name: String
  number: String
  city: String
  state: String
  country: String
  zipCode: String
  poBox: String
  propertyID: String
  userID: String
  organizationID: String
}

type Unit @model @aws_api_key {
  id: ID!
  name: String
  number: String
  city: String
  state: String
  country: String
  zipCode: String
  poBox: String
  buildingID: String
  tenantID: String
}

type ServiceRequest @model @aws_api_key {
  id: ID!
  requestorID: String
  userID: String
  unitID: String
  dateCreated: String
  dateCompleted: String
  note: String
}

# type Organization @model @aws_api_key {
#   id: ID!
#   name: String
#   owners: [User] @hasMany
#   employees: [User] @hasMany
# }

# type User @model @aws_api_key {
#   id: ID!
#   title: String
#   type: String
#   firstName: String
#   middleName: String
#   lastName: String
#   salary: String
#   organization: Organization @belongsTo
# }

# type Tenant @model @aws_api_key {
#   id: ID!
#   firstName: String
#   middleName: String
#   lastName: String
#   unit: Unit
# }

# type Property @model @aws_api_key {
#   id: ID!
#   name: String
#   city: String
#   state: String
#   country: String
#   zipCode: String
#   poBox: String
#   buildings: [Building] @hasMany
# }

# type Building @model @aws_api_key {
#   id: ID!
#   name: String
#   number: String
#   city: String
#   state: String
#   country: String
#   zipCode: String
#   poBox: String
#   property: Property @belongsTo
#   units: [Unit] @hasMany
# }

# type Unit @model @aws_api_key {
#   id: ID!
#   name: String
#   number: String
#   city: String
#   state: String
#   country: String
#   zipCode: String
#   poBox: String
#   building: Building @belongsTo
#   tenant: Tenant
#   serviceRequests: [ServiceRequest] @hasMany
# }

# type ServiceRequest @model @aws_api_key {
#   id: ID!
#   requestor: Tenant
#   handler: User
#   unit: Unit @belongsTo
#   dateCreated: String
#   dateCompleted: String
#   note: String
# }